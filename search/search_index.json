{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Portefaix \u00b6 Description \u00b6 A Kubernetes experience ... Tools \u00b6 Cloud Provider Sops Tfsec Inspec Google Cloud Platform GCP KMS Amazon AWS AWS KMS Microsoft Azure Azure KeyVault Alicloud OpenPGP Scaleway OpenPGP Digital Ocean OpenPGP Github Actions \u00b6 Cloud Provider Create (Terraform) Destroy (Terraform) Test (Inspec) Google Cloud Platform Amazon AWS Microsoft Azure Alicloud Scaleway Digital Ocean","title":"Introduction"},{"location":"#portefaix","text":"","title":"Portefaix"},{"location":"#description","text":"A Kubernetes experience ...","title":"Description"},{"location":"#tools","text":"Cloud Provider Sops Tfsec Inspec Google Cloud Platform GCP KMS Amazon AWS AWS KMS Microsoft Azure Azure KeyVault Alicloud OpenPGP Scaleway OpenPGP Digital Ocean OpenPGP","title":"Tools"},{"location":"#github-actions","text":"Cloud Provider Create (Terraform) Destroy (Terraform) Test (Inspec) Google Cloud Platform Amazon AWS Microsoft Azure Alicloud Scaleway Digital Ocean","title":"Github Actions"},{"location":"CONTRIBUTING/","text":"Contributing \u00b6","title":"Contributing"},{"location":"CONTRIBUTING/#contributing","text":"","title":"Contributing"},{"location":"code-of-conduct/","text":"Code of Conduct \u00b6","title":"Code of Conduct"},{"location":"code-of-conduct/#code-of-conduct","text":"","title":"Code of Conduct"},{"location":"roadmap/","text":"Roadmap \u00b6 v1 \u00b6 30% Infrastructure \u00b6 Development environment Terraform code for Google Cloud Platform [ #1 ] Terraform code for Amazon AWS [ #2 ] Terraform code for Microsoft Azure [ #3 ] Core \u00b6 Flux v2 bootstrap WIP Sops ( GKE , EKS, AKS) Observability \u00b6 WIP Monitoring: Prometheus, Thanos, Alertmanager ( GKE , EKS, AKS) WIP Logging: Loki, FluentBit, Vector ( GKE , EKS, AKS) Tracing: Tempo (GKE, EKS, AKS) Networking \u00b6 WIP External-DNS, Cert-Manager ( GKE , EKS, AKS) WIP Oauth2-Proxy (GKE, EKS, AKS) Service Mesh \u00b6 WIP Open Service Mesh ( GKE , EKS, AKS) Chaos \u00b6 WIP Chaos Mesh ( GKE , EKS, AKS) WIP Litmus Chaos ( GKE , EKS, AKS) v2 \u00b6 0% Service Mesh Cloud Providers \u00b6 Traffic Director [ #8 ] AWS App Mesh [ #9 ] Service Fabric Mesh [ #10 ] Backlog \u00b6 Cloud providers \u00b6 WIP Terraform code for Scaleway [ #17 ] WIP Terraform code for Digital Ocean [ #18 ] Secrets Store CSI Driver \u00b6 GCP Secret manager [ #4 ] Amazon Secrets manager [ #5 ] Azure Vault [ #6 ] Managing Cloud Services via Kubernetes CRDs \u00b6 AWS Controllers for Kubernetes (ACK) Azure Service Operator (for Kubernetes) Google Config Connector","title":"Roadmap"},{"location":"roadmap/#roadmap","text":"","title":"Roadmap"},{"location":"roadmap/#v1","text":"30%","title":"v1"},{"location":"roadmap/#infrastructure","text":"Development environment Terraform code for Google Cloud Platform [ #1 ] Terraform code for Amazon AWS [ #2 ] Terraform code for Microsoft Azure [ #3 ]","title":"Infrastructure"},{"location":"roadmap/#core","text":"Flux v2 bootstrap WIP Sops ( GKE , EKS, AKS)","title":"Core"},{"location":"roadmap/#observability","text":"WIP Monitoring: Prometheus, Thanos, Alertmanager ( GKE , EKS, AKS) WIP Logging: Loki, FluentBit, Vector ( GKE , EKS, AKS) Tracing: Tempo (GKE, EKS, AKS)","title":"Observability"},{"location":"roadmap/#networking","text":"WIP External-DNS, Cert-Manager ( GKE , EKS, AKS) WIP Oauth2-Proxy (GKE, EKS, AKS)","title":"Networking"},{"location":"roadmap/#service-mesh","text":"WIP Open Service Mesh ( GKE , EKS, AKS)","title":"Service Mesh"},{"location":"roadmap/#chaos","text":"WIP Chaos Mesh ( GKE , EKS, AKS) WIP Litmus Chaos ( GKE , EKS, AKS)","title":"Chaos"},{"location":"roadmap/#v2","text":"0%","title":"v2"},{"location":"roadmap/#service-mesh-cloud-providers","text":"Traffic Director [ #8 ] AWS App Mesh [ #9 ] Service Fabric Mesh [ #10 ]","title":"Service Mesh Cloud Providers"},{"location":"roadmap/#backlog","text":"","title":"Backlog"},{"location":"roadmap/#cloud-providers","text":"WIP Terraform code for Scaleway [ #17 ] WIP Terraform code for Digital Ocean [ #18 ]","title":"Cloud providers"},{"location":"roadmap/#secrets-store-csi-driver","text":"GCP Secret manager [ #4 ] Amazon Secrets manager [ #5 ] Azure Vault [ #6 ]","title":"Secrets Store CSI Driver"},{"location":"roadmap/#managing-cloud-services-via-kubernetes-crds","text":"AWS Controllers for Kubernetes (ACK) Azure Service Operator (for Kubernetes) Google Config Connector","title":"Managing Cloud Services via Kubernetes CRDs"},{"location":"troubleshooting/","text":"Troubleshooting \u00b6","title":"Troubleshooting"},{"location":"troubleshooting/#troubleshooting","text":"","title":"Troubleshooting"},{"location":"infrastructure/alicloud/","text":"Alicloud \u00b6 Info Work in progress Setup \u00b6 Create and admin user , enable API keys and add AdministratorAccess policy Then configure Portefaix environment file ${HOME}/.config/portefaix/portefaix.sh : # alicloud export ALICLOUD_ACCESS_KEY = \"xxxxxxxx\" export ALICLOUD_SECRET_KEY = \"xxxxxxxxxx\" export ALICLOUD_REGION = \"xxxxxxxxxxx\" And load environment : \u276f . ./portefaix.sh alicloud Setup Aliyun profile : \u276f make -f hack/aliyun.mk aliyun-profile-configure ENV = staging Storage for Terraform \u00b6 \u276f make -f hack/aliyun.mk aliyun-bucket-create ENV = staging \u276f make -f hack/aliyun.mk aliyun-tablestore-create ENV = staging Terraform \u00b6 Infrastructure As Code for Portefaix using Amazon alicloud is in iac/alicloud directory Prerequisites A project created on Alibaba Cloud Edit iac/alicloud/alicloud.staging.mk or add another file named : iac/alicloud/alicloud.<ENVIRONMENT>.mk VPC / NAT Gateway \u00b6 Create the VPC \u276f make terraform-apply SERVICE = iac/alicloud/vpc ENV = staging Create the NAT Gateway : \u276f make terraform-apply SERVICE = iac/alicloud/nat-gateway ENV = staging Create an Elastic IP for the NAT Gateway: \u276f make terraform-apply SERVICE = iac/alicloud/elastic-ips/nat-gateway ENV = staging ACK \u00b6 \u276f make terraform-apply SERVICE = iac/alicloud/ack ENV = staging Access \u00b6 Configure kubectl \u276f make -f hack/alicloud.mk aliyun-kube-credentials ENV = staging \u276f KUBECONFIG = config-portefaix-staging kubectl get nodes NAME STATUS ROLES AGE VERSION eu-central-1.10.0.1.67 Ready <none> 16h v1.18.8-aliyun.1 eu-central-1.10.0.2.235 Ready <none> 16h v1.18.8-aliyun.1","title":"Alicloud"},{"location":"infrastructure/alicloud/#alicloud","text":"Info Work in progress","title":"Alicloud"},{"location":"infrastructure/alicloud/#setup","text":"Create and admin user , enable API keys and add AdministratorAccess policy Then configure Portefaix environment file ${HOME}/.config/portefaix/portefaix.sh : # alicloud export ALICLOUD_ACCESS_KEY = \"xxxxxxxx\" export ALICLOUD_SECRET_KEY = \"xxxxxxxxxx\" export ALICLOUD_REGION = \"xxxxxxxxxxx\" And load environment : \u276f . ./portefaix.sh alicloud Setup Aliyun profile : \u276f make -f hack/aliyun.mk aliyun-profile-configure ENV = staging","title":"Setup"},{"location":"infrastructure/alicloud/#storage-for-terraform","text":"\u276f make -f hack/aliyun.mk aliyun-bucket-create ENV = staging \u276f make -f hack/aliyun.mk aliyun-tablestore-create ENV = staging","title":"Storage for Terraform"},{"location":"infrastructure/alicloud/#terraform","text":"Infrastructure As Code for Portefaix using Amazon alicloud is in iac/alicloud directory Prerequisites A project created on Alibaba Cloud Edit iac/alicloud/alicloud.staging.mk or add another file named : iac/alicloud/alicloud.<ENVIRONMENT>.mk","title":"Terraform"},{"location":"infrastructure/alicloud/#vpc-nat-gateway","text":"Create the VPC \u276f make terraform-apply SERVICE = iac/alicloud/vpc ENV = staging Create the NAT Gateway : \u276f make terraform-apply SERVICE = iac/alicloud/nat-gateway ENV = staging Create an Elastic IP for the NAT Gateway: \u276f make terraform-apply SERVICE = iac/alicloud/elastic-ips/nat-gateway ENV = staging","title":"VPC / NAT Gateway"},{"location":"infrastructure/alicloud/#ack","text":"\u276f make terraform-apply SERVICE = iac/alicloud/ack ENV = staging","title":"ACK"},{"location":"infrastructure/alicloud/#access","text":"Configure kubectl \u276f make -f hack/alicloud.mk aliyun-kube-credentials ENV = staging \u276f KUBECONFIG = config-portefaix-staging kubectl get nodes NAME STATUS ROLES AGE VERSION eu-central-1.10.0.1.67 Ready <none> 16h v1.18.8-aliyun.1 eu-central-1.10.0.2.235 Ready <none> 16h v1.18.8-aliyun.1","title":"Access"},{"location":"infrastructure/aws/","text":"Amazon AWS \u00b6 Info Work In Progress Setup \u00b6 Create an admin user . Then API Keys , and configure Portefaix environment file ${HOME}/.config/portefaix/portefaix.sh : # AWS export AWS_ACCESS_KEY_ID = \".....\" export AWS_SECRET_ACCESS_KEY = \".....\" export AWS_DEFAULT_REGION = \"...\" export AWS_REGION = \"....\" And load environment : \u276f . ./portefaix.sh aws Storage for Terraform \u00b6 Create a S3 bucket for Terraform states: \u276f make -f hack/aws.mk aws-s3-bucket ENV = staging Create a DynamoDB table : \u276f make -f hack/aws.mk aws-dynamodb-create-table ENV = staging Terraform \u00b6 Infrastructure As Code for Portefaix using Amazon AWS is in iac/aws directory Prerequisites A project created on Amazon AWS Edit iac/aws/aws.staging.mk or add another file named : iac/aws/aws.<ENVIRONMENT>.mk VPC / Internet Gateway \u00b6 Create an Elastic IP for Internet Gateway: \u276f make terraform-apply SERVICE = iac/aws/elastic_ips/internet-gateway ENV = staging Create the VPC and Internet Gateway : \u276f make terraform-apply SERVICE = iac/aws/vpc ENV = staging EKS \u00b6 \u276f make terraform-apply SERVICE = iac/aws/eks ENV = staging Kubernetes components \u00b6 Sops \u00b6 \u276f make terraform-apply SERVICE = iac/aws/sops ENV = staging Outputs: kms_arn = arn:aws:kms:eu-west-3:447241706233:key/cf77f24a-00db-4d6a-8b4b-a8dec3976ff2 role_arn_eks = arn:aws:iam::447241706233:role/portefaix-staging-eks-sops-eks role_arn_users = arn:aws:iam::447241706233:role/portefaix-staging-eks-sops-users Observability \u00b6 \u276f make terraform-apply SERVICE = iac/aws/observability ENV = staging Outputs: loki_role_arn = arn:aws:iam::xxxxxxxxxxxxx:role/portefaix-staging-eks-loki prometheus_role_arn = arn:aws:iam::xxxxxxxxxxxxx:role/portefaix-staging-eks-loki tempo_role_arn = arn:aws:iam::xxxxxxxxxxxxx:role/portefaix-staging-eks-tempo thanos_role_arn = arn:aws:iam::xxxxxxxxxxxxx:role/portefaix-staging-eks-thanos External DNS \u00b6 \u276f make terraform-apply SERVICE = iac/aws/external-dns ENV = staging Outputs: role_arn = arn:aws:iam::xxxxxxxxxxx:role/portefaix-staging-eks-external-dns Velero \u00b6 \u276f make terraform-apply SERVICE = iac/aws/velero ENV = staging Outputs: role_arn = arn:aws:iam::xxxxxxxxxxxxxxxxx:role/portefaix-staging-eks-velero Vector \u00b6 \u276f make terraform-apply SERVICE = iac/aws/vector ENV = staging Outputs: role_arn = arn:aws:iam::xxxxxxxxxxxxxxxxx:role/portefaix-staging-eks-vector Cert-Manager \u00b6 \u276f make terraform-apply SERVICE = iac/aws/cert-manager ENV = staging Outputs: role_arn = arn:aws:iam::xxxxxxxxxxxxxxxxx:role/portefaix-staging-eks-cert-manager Inspec \u00b6 inspec is used to check infrastructure. Check: \u276f make -f hack/aws.mk inspec-debug Test infrastructure \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Platform Details \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Name: aws Families: cloud, api Release: train-aws: v0.1.15, aws-sdk-core: v3.94.0 Execute tests: \u276f make -f hack/aws.mk inspec-test SERVICE = iac/aws/<SERVICE> ENV = staging You could upload JSON results file to Heimdall Lite to display ressults CIS AWS Foundations Benchmark \u00b6 You could perform tests according to the CIS AWS Foundations Benchmark : \u276f make -f hack/aws.mk inspec-aws-cis ENV = staging CIS Kubernetes Benchmark \u00b6 \u276f make -f hack/aws.mk inspec-aws-kubernetes ENV = staging AWS-VPC \u00b6 \u276f make -f hack/aws.mk inspec-test SERVICE = iac/aws/vpc ENV = staging Code Description vpc-1 Ensure that VPC exist and tags correcly set vpc-2 Ensure that VPC have an Internet Gateway vpc-3 Check AWS Security Groups does not have undesirable rules vpc-4 Ensure that VPC Subnets exists AWS-EKS \u00b6 \u276f make -f hack/aws.mk inspec-test SERVICE = iac/aws/eks ENV = staging Code Description eks-1 Ensure the AWS EKS Cluster is running a minimal version eks-2 Ensure the AWS EKS Cluster control plane has audit logs enabled eks-3 Ensure the AWS EKS Cluster is not public eks-4 Ensure the AWS EKS Cluster has application secrets encryption enabled eks-5 Ensure AWS EKS Cluster Subnets are specific eks-6 Ensure AWS EKS Cluster Nodegroups do not allow remote access from all IPs AWS-Sops \u00b6 \u276f make -f hack/aws.mk inspec-test SERVICE = iac/aws/sops ENV = staging Code Description sops-1 Ensure that Kms key exist sops-1 Ensure IAM roles and policies exists AWS-Observability \u00b6 \u276f make -f hack/aws.mk inspec-test SERVICE = iac/aws/observability ENV = staging Code Description grafana-1 Ensure IAM roles and policies exists prometheus-1 Ensure IAM roles and policies exists thanos-1 Ensure that S3 bucket exist and tags correcly set thanos-2 Ensure that S3 log bucket exist and tags correcly set thanos-3 Ensure that Kms key exist thanos-4 Ensure IAM roles and policies exists loki-1 Ensure that S3 bucket exist and tags correcly set loki-2 Ensure that S3 log bucket exist and tags correcly set loki-3 Ensure that Kms key exist loki-4 Ensure IAM roles and policies exists tempo-1 Ensure that S3 bucket exist and tags correcly set tempo-2 Ensure that S3 log bucket exist and tags correcly set tempo-3 Ensure that Kms key exist tempo-4 Ensure IAM roles and policies exists AWS-Velero \u00b6 \u276f make -f hack/aws.mk inspec-test SERVICE = iac/aws/velero ENV = staging Code Description velero-1 Ensure that S3 bucket exist and tags correcly set velero-2 Ensure that S3 log bucket exist and tags correcly set velero-3 Ensure that Kms key exist velero-4 Ensure IAM roles and policies exists AWS-Vector \u00b6 \u276f make -f hack/aws.mk inspec-test SERVICE = iac/aws/vector ENV = staging Code Description vector-1 Ensure that S3 bucket exist and tags correcly set vector-2 Ensure that S3 log bucket exist and tags correcly set vector-3 Ensure that Kms key exist vector-4 Ensure IAM roles and policies exists Github Actions \u00b6 Infrasture deployment could be launch using a manual trigger : Kubernetes access \u00b6 Configure kubectl \u276f make kubernetes-credentials CLOUD = aws ENV = staging \u276f kubectl get nodes NAME STATUS ROLES AGE VERSION ip-10-0-31-216.eu-west-3.compute.internal Ready <none> 101m v1.18.9-eks-d1db3c ip-10-0-40-203.eu-west-3.compute.internal Ready <none> 101m v1.18.9-eks-d1db3c","title":"Amazon AWS"},{"location":"infrastructure/aws/#amazon-aws","text":"Info Work In Progress","title":"Amazon AWS"},{"location":"infrastructure/aws/#setup","text":"Create an admin user . Then API Keys , and configure Portefaix environment file ${HOME}/.config/portefaix/portefaix.sh : # AWS export AWS_ACCESS_KEY_ID = \".....\" export AWS_SECRET_ACCESS_KEY = \".....\" export AWS_DEFAULT_REGION = \"...\" export AWS_REGION = \"....\" And load environment : \u276f . ./portefaix.sh aws","title":"Setup"},{"location":"infrastructure/aws/#storage-for-terraform","text":"Create a S3 bucket for Terraform states: \u276f make -f hack/aws.mk aws-s3-bucket ENV = staging Create a DynamoDB table : \u276f make -f hack/aws.mk aws-dynamodb-create-table ENV = staging","title":"Storage for Terraform"},{"location":"infrastructure/aws/#terraform","text":"Infrastructure As Code for Portefaix using Amazon AWS is in iac/aws directory Prerequisites A project created on Amazon AWS Edit iac/aws/aws.staging.mk or add another file named : iac/aws/aws.<ENVIRONMENT>.mk","title":"Terraform"},{"location":"infrastructure/aws/#vpc-internet-gateway","text":"Create an Elastic IP for Internet Gateway: \u276f make terraform-apply SERVICE = iac/aws/elastic_ips/internet-gateway ENV = staging Create the VPC and Internet Gateway : \u276f make terraform-apply SERVICE = iac/aws/vpc ENV = staging","title":"VPC / Internet Gateway"},{"location":"infrastructure/aws/#eks","text":"\u276f make terraform-apply SERVICE = iac/aws/eks ENV = staging","title":"EKS"},{"location":"infrastructure/aws/#kubernetes-components","text":"","title":"Kubernetes components"},{"location":"infrastructure/aws/#sops","text":"\u276f make terraform-apply SERVICE = iac/aws/sops ENV = staging Outputs: kms_arn = arn:aws:kms:eu-west-3:447241706233:key/cf77f24a-00db-4d6a-8b4b-a8dec3976ff2 role_arn_eks = arn:aws:iam::447241706233:role/portefaix-staging-eks-sops-eks role_arn_users = arn:aws:iam::447241706233:role/portefaix-staging-eks-sops-users","title":"Sops"},{"location":"infrastructure/aws/#observability","text":"\u276f make terraform-apply SERVICE = iac/aws/observability ENV = staging Outputs: loki_role_arn = arn:aws:iam::xxxxxxxxxxxxx:role/portefaix-staging-eks-loki prometheus_role_arn = arn:aws:iam::xxxxxxxxxxxxx:role/portefaix-staging-eks-loki tempo_role_arn = arn:aws:iam::xxxxxxxxxxxxx:role/portefaix-staging-eks-tempo thanos_role_arn = arn:aws:iam::xxxxxxxxxxxxx:role/portefaix-staging-eks-thanos","title":"Observability"},{"location":"infrastructure/aws/#external-dns","text":"\u276f make terraform-apply SERVICE = iac/aws/external-dns ENV = staging Outputs: role_arn = arn:aws:iam::xxxxxxxxxxx:role/portefaix-staging-eks-external-dns","title":"External DNS"},{"location":"infrastructure/aws/#velero","text":"\u276f make terraform-apply SERVICE = iac/aws/velero ENV = staging Outputs: role_arn = arn:aws:iam::xxxxxxxxxxxxxxxxx:role/portefaix-staging-eks-velero","title":"Velero"},{"location":"infrastructure/aws/#vector","text":"\u276f make terraform-apply SERVICE = iac/aws/vector ENV = staging Outputs: role_arn = arn:aws:iam::xxxxxxxxxxxxxxxxx:role/portefaix-staging-eks-vector","title":"Vector"},{"location":"infrastructure/aws/#cert-manager","text":"\u276f make terraform-apply SERVICE = iac/aws/cert-manager ENV = staging Outputs: role_arn = arn:aws:iam::xxxxxxxxxxxxxxxxx:role/portefaix-staging-eks-cert-manager","title":"Cert-Manager"},{"location":"infrastructure/aws/#inspec","text":"inspec is used to check infrastructure. Check: \u276f make -f hack/aws.mk inspec-debug Test infrastructure \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Platform Details \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Name: aws Families: cloud, api Release: train-aws: v0.1.15, aws-sdk-core: v3.94.0 Execute tests: \u276f make -f hack/aws.mk inspec-test SERVICE = iac/aws/<SERVICE> ENV = staging You could upload JSON results file to Heimdall Lite to display ressults","title":"Inspec"},{"location":"infrastructure/aws/#cis-aws-foundations-benchmark","text":"You could perform tests according to the CIS AWS Foundations Benchmark : \u276f make -f hack/aws.mk inspec-aws-cis ENV = staging","title":"CIS AWS Foundations Benchmark"},{"location":"infrastructure/aws/#cis-kubernetes-benchmark","text":"\u276f make -f hack/aws.mk inspec-aws-kubernetes ENV = staging","title":"CIS Kubernetes Benchmark"},{"location":"infrastructure/aws/#aws-vpc","text":"\u276f make -f hack/aws.mk inspec-test SERVICE = iac/aws/vpc ENV = staging Code Description vpc-1 Ensure that VPC exist and tags correcly set vpc-2 Ensure that VPC have an Internet Gateway vpc-3 Check AWS Security Groups does not have undesirable rules vpc-4 Ensure that VPC Subnets exists","title":"AWS-VPC"},{"location":"infrastructure/aws/#aws-eks","text":"\u276f make -f hack/aws.mk inspec-test SERVICE = iac/aws/eks ENV = staging Code Description eks-1 Ensure the AWS EKS Cluster is running a minimal version eks-2 Ensure the AWS EKS Cluster control plane has audit logs enabled eks-3 Ensure the AWS EKS Cluster is not public eks-4 Ensure the AWS EKS Cluster has application secrets encryption enabled eks-5 Ensure AWS EKS Cluster Subnets are specific eks-6 Ensure AWS EKS Cluster Nodegroups do not allow remote access from all IPs","title":"AWS-EKS"},{"location":"infrastructure/aws/#aws-sops","text":"\u276f make -f hack/aws.mk inspec-test SERVICE = iac/aws/sops ENV = staging Code Description sops-1 Ensure that Kms key exist sops-1 Ensure IAM roles and policies exists","title":"AWS-Sops"},{"location":"infrastructure/aws/#aws-observability","text":"\u276f make -f hack/aws.mk inspec-test SERVICE = iac/aws/observability ENV = staging Code Description grafana-1 Ensure IAM roles and policies exists prometheus-1 Ensure IAM roles and policies exists thanos-1 Ensure that S3 bucket exist and tags correcly set thanos-2 Ensure that S3 log bucket exist and tags correcly set thanos-3 Ensure that Kms key exist thanos-4 Ensure IAM roles and policies exists loki-1 Ensure that S3 bucket exist and tags correcly set loki-2 Ensure that S3 log bucket exist and tags correcly set loki-3 Ensure that Kms key exist loki-4 Ensure IAM roles and policies exists tempo-1 Ensure that S3 bucket exist and tags correcly set tempo-2 Ensure that S3 log bucket exist and tags correcly set tempo-3 Ensure that Kms key exist tempo-4 Ensure IAM roles and policies exists","title":"AWS-Observability"},{"location":"infrastructure/aws/#aws-velero","text":"\u276f make -f hack/aws.mk inspec-test SERVICE = iac/aws/velero ENV = staging Code Description velero-1 Ensure that S3 bucket exist and tags correcly set velero-2 Ensure that S3 log bucket exist and tags correcly set velero-3 Ensure that Kms key exist velero-4 Ensure IAM roles and policies exists","title":"AWS-Velero"},{"location":"infrastructure/aws/#aws-vector","text":"\u276f make -f hack/aws.mk inspec-test SERVICE = iac/aws/vector ENV = staging Code Description vector-1 Ensure that S3 bucket exist and tags correcly set vector-2 Ensure that S3 log bucket exist and tags correcly set vector-3 Ensure that Kms key exist vector-4 Ensure IAM roles and policies exists","title":"AWS-Vector"},{"location":"infrastructure/aws/#github-actions","text":"Infrasture deployment could be launch using a manual trigger :","title":"Github Actions"},{"location":"infrastructure/aws/#kubernetes-access","text":"Configure kubectl \u276f make kubernetes-credentials CLOUD = aws ENV = staging \u276f kubectl get nodes NAME STATUS ROLES AGE VERSION ip-10-0-31-216.eu-west-3.compute.internal Ready <none> 101m v1.18.9-eks-d1db3c ip-10-0-40-203.eu-west-3.compute.internal Ready <none> 101m v1.18.9-eks-d1db3c","title":"Kubernetes access"},{"location":"infrastructure/azure/","text":"Azure \u00b6 Info Work In Progress Setup \u00b6 Export Azure credentials: \u276f export AZURE_SUBSCRIPTION_ID = \"xxxxxx\" Storage for Terraform \u00b6 Create a Storage Account : \u276f make -f hack/azure.mk azure-storage-account ENV = dev XXXXXXXXXXX You could see the Key on the output. Create storage container for Terraform states: \u276f make -f hack/azure.mk azure-storage-container ENV = dev KEY = \"xxxxxxxxxxxxxxxxx\" Create the Service Principal for Terraform: \u276f make -f hack/azure.mk azure-sp ENV = dev { \"appId\" : \"xxxxxxxxxxxxxxxxx\" , \"displayName\" : \"portefaix-dev\" , \"name\" : \"http://portefaix-dev\" , \"password\" : \"xxxxxxxxxxxx\" , \"tenant\" : \"xxxxxxxxxxxx\" } Extract informations and configure portefaix configuration file ( hack/config/portefaix.sh ): SUBSCRIPTION_ID CLIENT_ID CLIENT_SECRET ARM_TENANT_ID And load environment : \u276f . ./portefaix.sh azure Set permissions: \u276f make -f hack/azure.mk azure-permissions ENV = dev Terraform \u00b6 Infrastructure As Code for Portefaix using Azure is in iac/azure directory Prerequisites A project created on Azure Edit iac/azure/azure.dev.mk or add another file named : iac/azure/azure.<ENVIRONMENT>.mk Virtual Network \u00b6 \u276f make terraform-apply SERVICE = iac/azure/vnet ENV = dev NAT Gateway \u00b6 Public IP addresses : \u276f make terraform-apply SERVICE = iac/azure/public-ips/nat-gateway ENV = dev NAT Gateway service: \u276f make terraform-apply SERVICE = iac/azure/nat-gateway ENV = dev AKS \u00b6 \u276f make terraform-apply SERVICE = iac/azure/aks ENV = dev Kubernetes components \u00b6 Sops \u00b6 \u276f make terraform-apply SERVICE = iac/azure/sops ENV = dev Observability \u00b6 \u276f make terraform-apply SERVICE = iac/azure/observability ENV = dev Velero \u00b6 \u276f make terraform-apply SERVICE = iac/azure/velero ENV = dev Inspec \u00b6 inspec is used to check infrastructure. Check: \u276f make -f hack/azure.mk inspec-debug Test infrastructure \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Platform Details \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Name: azure Families: cloud, api Release: azure_mgmt_resources-v0.17.8 Execute tests: \u276f make -f hack/azure.mk inspec-test SERVICE = iac/azure/<SERVICE> ENV = dev You could upload JSON results file to Heimdall Lite to display ressults Microsoft Azure CIS Foundations \u00b6 You could perform tests accoring the CIS Microsoft Azure Foundations Security Benchmark : \u276f make -f hack/azure.mk inspec-cis ENV = dev Inspec-AKS \u00b6 Code Description resourcegroup-1 Check that resource group exists aks-1 Ensure logging to Azure Monitor is configured aks-2 Ensure RBAC is enabled aks-3 Ensure API Server Authorized IP Ranges are configured Github Actions \u00b6 Create \u00b6 Destroy \u00b6 Access \u00b6 Configure kubectl \u276f make -f hack/azure.mk azure-kube-credentials ENV = dev \u276f kubectl get nodes NAME STATUS ROLES AGE VERSION aks-core-19506595-vmss000000 Ready agent 8h v1.18.10 \u276f kubectl get pod -A NAMESPACE NAME READY STATUS RESTARTS AGE kube-system calico-node-4wrrw 1 /1 Running 0 8h kube-system calico-typha-deployment-5664ccf987-d8sph 1 /1 Running 0 8h kube-system calico-typha-horizontal-autoscaler-78dd9bb4b5-hgvcl 1 /1 Running 0 8h kube-system coredns-748cdb7bf4-99crk 1 /1 Running 0 8h kube-system coredns-748cdb7bf4-dckt9 1 /1 Running 0 8h kube-system coredns-autoscaler-868b684fd4-pkfc2 1 /1 Running 0 8h kube-system kube-proxy-rmxst 1 /1 Running 0 8h kube-system metrics-server-58fdc875d5-tsss6 1 /1 Running 2 8h kube-system tunnelfront-9dbbf9f49-mptnv 1 /1 Running 0 8h","title":"Microsoft Azure"},{"location":"infrastructure/azure/#azure","text":"Info Work In Progress","title":"Azure"},{"location":"infrastructure/azure/#setup","text":"Export Azure credentials: \u276f export AZURE_SUBSCRIPTION_ID = \"xxxxxx\"","title":"Setup"},{"location":"infrastructure/azure/#storage-for-terraform","text":"Create a Storage Account : \u276f make -f hack/azure.mk azure-storage-account ENV = dev XXXXXXXXXXX You could see the Key on the output. Create storage container for Terraform states: \u276f make -f hack/azure.mk azure-storage-container ENV = dev KEY = \"xxxxxxxxxxxxxxxxx\" Create the Service Principal for Terraform: \u276f make -f hack/azure.mk azure-sp ENV = dev { \"appId\" : \"xxxxxxxxxxxxxxxxx\" , \"displayName\" : \"portefaix-dev\" , \"name\" : \"http://portefaix-dev\" , \"password\" : \"xxxxxxxxxxxx\" , \"tenant\" : \"xxxxxxxxxxxx\" } Extract informations and configure portefaix configuration file ( hack/config/portefaix.sh ): SUBSCRIPTION_ID CLIENT_ID CLIENT_SECRET ARM_TENANT_ID And load environment : \u276f . ./portefaix.sh azure Set permissions: \u276f make -f hack/azure.mk azure-permissions ENV = dev","title":"Storage for Terraform"},{"location":"infrastructure/azure/#terraform","text":"Infrastructure As Code for Portefaix using Azure is in iac/azure directory Prerequisites A project created on Azure Edit iac/azure/azure.dev.mk or add another file named : iac/azure/azure.<ENVIRONMENT>.mk","title":"Terraform"},{"location":"infrastructure/azure/#virtual-network","text":"\u276f make terraform-apply SERVICE = iac/azure/vnet ENV = dev","title":"Virtual Network"},{"location":"infrastructure/azure/#nat-gateway","text":"Public IP addresses : \u276f make terraform-apply SERVICE = iac/azure/public-ips/nat-gateway ENV = dev NAT Gateway service: \u276f make terraform-apply SERVICE = iac/azure/nat-gateway ENV = dev","title":"NAT Gateway"},{"location":"infrastructure/azure/#aks","text":"\u276f make terraform-apply SERVICE = iac/azure/aks ENV = dev","title":"AKS"},{"location":"infrastructure/azure/#kubernetes-components","text":"","title":"Kubernetes components"},{"location":"infrastructure/azure/#sops","text":"\u276f make terraform-apply SERVICE = iac/azure/sops ENV = dev","title":"Sops"},{"location":"infrastructure/azure/#observability","text":"\u276f make terraform-apply SERVICE = iac/azure/observability ENV = dev","title":"Observability"},{"location":"infrastructure/azure/#velero","text":"\u276f make terraform-apply SERVICE = iac/azure/velero ENV = dev","title":"Velero"},{"location":"infrastructure/azure/#inspec","text":"inspec is used to check infrastructure. Check: \u276f make -f hack/azure.mk inspec-debug Test infrastructure \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Platform Details \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Name: azure Families: cloud, api Release: azure_mgmt_resources-v0.17.8 Execute tests: \u276f make -f hack/azure.mk inspec-test SERVICE = iac/azure/<SERVICE> ENV = dev You could upload JSON results file to Heimdall Lite to display ressults","title":"Inspec"},{"location":"infrastructure/azure/#microsoft-azure-cis-foundations","text":"You could perform tests accoring the CIS Microsoft Azure Foundations Security Benchmark : \u276f make -f hack/azure.mk inspec-cis ENV = dev","title":"Microsoft Azure CIS Foundations"},{"location":"infrastructure/azure/#inspec-aks","text":"Code Description resourcegroup-1 Check that resource group exists aks-1 Ensure logging to Azure Monitor is configured aks-2 Ensure RBAC is enabled aks-3 Ensure API Server Authorized IP Ranges are configured","title":"Inspec-AKS"},{"location":"infrastructure/azure/#github-actions","text":"","title":"Github Actions"},{"location":"infrastructure/azure/#create","text":"","title":"Create"},{"location":"infrastructure/azure/#destroy","text":"","title":"Destroy"},{"location":"infrastructure/azure/#access","text":"Configure kubectl \u276f make -f hack/azure.mk azure-kube-credentials ENV = dev \u276f kubectl get nodes NAME STATUS ROLES AGE VERSION aks-core-19506595-vmss000000 Ready agent 8h v1.18.10 \u276f kubectl get pod -A NAMESPACE NAME READY STATUS RESTARTS AGE kube-system calico-node-4wrrw 1 /1 Running 0 8h kube-system calico-typha-deployment-5664ccf987-d8sph 1 /1 Running 0 8h kube-system calico-typha-horizontal-autoscaler-78dd9bb4b5-hgvcl 1 /1 Running 0 8h kube-system coredns-748cdb7bf4-99crk 1 /1 Running 0 8h kube-system coredns-748cdb7bf4-dckt9 1 /1 Running 0 8h kube-system coredns-autoscaler-868b684fd4-pkfc2 1 /1 Running 0 8h kube-system kube-proxy-rmxst 1 /1 Running 0 8h kube-system metrics-server-58fdc875d5-tsss6 1 /1 Running 2 8h kube-system tunnelfront-9dbbf9f49-mptnv 1 /1 Running 0 8h","title":"Access"},{"location":"infrastructure/digitalocean/","text":"Digital Ocean \u00b6 Info Work In Progress Setup \u00b6 Create a Space for your Terraform State. Create the Space Access Keys Create the API Personal Token Configure Portefaix environment file ${HOME}/.config/portefaix/portefaix.sh : # Digital Ocean export SPACES_ACCESS_KEY_ID = \"xxxxxxx\" export SPACES_SECRET_ACCESS_KEY = \"xxxxxxxx\" export DIGITALOCEAN_TOKEN = \"xxxxxxxxxxxx\" And load environment : \u276f . ./portefaix.sh","title":"Digital Ocean"},{"location":"infrastructure/digitalocean/#digital-ocean","text":"Info Work In Progress","title":"Digital Ocean"},{"location":"infrastructure/digitalocean/#setup","text":"Create a Space for your Terraform State. Create the Space Access Keys Create the API Personal Token Configure Portefaix environment file ${HOME}/.config/portefaix/portefaix.sh : # Digital Ocean export SPACES_ACCESS_KEY_ID = \"xxxxxxx\" export SPACES_SECRET_ACCESS_KEY = \"xxxxxxxx\" export DIGITALOCEAN_TOKEN = \"xxxxxxxxxxxx\" And load environment : \u276f . ./portefaix.sh","title":"Setup"},{"location":"infrastructure/gcp/","text":"Google Cloud Platform \u00b6 Info Work In Progress Setup \u00b6 Authenticate on the Google Cloud Platform: \u276f gcloud auth application-default login Enable APIs: \u276f make -f hack/gcp.mk gcp-enable-apis ENV = prod Create a bucket for the Terraform tfstates: \u276f make -f hack/gcp.mk gcp-bucket ENV = prod Configure Portefaix environment file ${HOME}/.config/portefaix/portefaix.sh : # GCP export TF_VAR_master_authorized_networks = '[{\"cidr_block\": \"x.x.x.x/32\", \"display_name\": \"Home\"}]' And load environment : \u276f . ./portefaix.sh gcp Terraform \u00b6 Infrastructure As Code for Portefaix on Google Cloud Platform is in iac/gcp directory Prerequisites A project created on Google Cloud Platform. Edit iac/gcp/gcp.prod.mk or add another file named : iac/gcp/gcp.<ENVIRONMENT>.mk Applications Versions Description Terraform v0.13.5 Usage of tfenv is recommanded GKE v1.18.X Rapid Channel VPC \u00b6 \u276f make terraform-apply SERVICE = iac/gcp/vpc ENV = prod Cloud DNS \u00b6 \u276f make terraform-apply SERVICE = iac/gcp/dns ENV = prod Cloud NAT \u00b6 \u276f make terraform-apply SERVICE = iac/gcp/external-ips/cloud-nat ENV = prod \u276f make terraform-apply SERVICE = iac/gcp/cloud-nat ENV = prod GKE \u00b6 \u276f make terraform-apply SERVICE = iac/gcp/gke ENV = prod Kubernetes components \u00b6 Sops \u00b6 \u276f make terraform-apply SERVICE = iac/gcp/sops ENV = prod Outputs: email = xxxxxxxxxxxx-sops@xxxxxxxxxxxx.iam.gserviceaccount.com key = projects/xxxxxxxxxxxx/locations/europe-west1/keyRings/xxxxxxxxxxxx-sops/cryptoKeys/xxxxxxxxxxxx-sops Observability \u00b6 \u276f make terraform-apply SERVICE = iac/gcp/observability ENV = prod Outputs: loki_service_account = xxxxxxxxxx-loki@xxxxxxxxxx.iam.gserviceaccount.com prometheus_service_account = xxxxxxxxxx-loki@xxxxxxxxxx.iam.gserviceaccount.com tempo_service_account = xxxxxxxxxx-tempo@xxxxxxxxxx.iam.gserviceaccount.com thanos_service_account = xxxxxxxxxx-thanos@xxxxxxxxxx.iam.gserviceaccount.com Cert Manager \u00b6 \u276f make terraform-apply SERVICE = iac/gcp/cert-manager ENV = prod Outputs: cert_manager_service_account = xxxxxxxxxxx-cert-manager@xxxxxxxxxxx.iam.gserviceaccount.com External DNS \u00b6 \u276f make terraform-apply SERVICE = iac/gcp/external-dns ENV = prod Outputs: external_dns_service_account = xxxxxxxxxxx-external-dns@xxxxxxxxxxx.iam.gserviceaccount.com Velero \u00b6 \u276f make terraform-apply SERVICE = iac/gcp/velero ENV = prod Outputs: velero_service_account = xxxxxxxxxxx-velero@xxxxxxxxxxx.iam.gserviceaccount.com Vector \u00b6 \u276f make terraform-apply SERVICE = iac/gcp/vector ENV = prod Outputs: vector_service_account = xxxxxxxxxxx-vector@xxxxxxxxxxx.iam.gserviceaccount.com Inspec \u00b6 inspec is used to check infrastructure : Check: \u276f make -f hack/gcp.mk inspec-debug Test infrastructure \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Platform Details \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Name: gcp Families: cloud, api Release: google-api-client-v0.34.1 Execute tests: \u276f make -f hack/gcp.mk inspec-test SERVICE = iac/gcp/<SERVICE> ENV = prod You could upload JSON results file to Heimdall Lite to display ressults CIS Kubernetes Benchmark \u00b6 \u276f make -f hack/gcp.mk inspec-gcp-kubernetes ENV = prod GCP CIS \u00b6 You could perform tests accoring the GCP CIS : \u276f make -f hack/gcp.mk inspec-cis ENV = prod GCP-VPC \u00b6 \u276f make -f hack/gcp.mk inspec-test SERVICE = iac/gcp/vpc ENV = prod Code Description vpc-1 Ensure default network is deleted vpc-2 Ensure network is correctly configure GCP-GKE \u00b6 \u276f make -f gcp.mk inspec-test SERVICE = iac/gcp/gke ENV = prod Code Description gke-1 Stackdriver Logging and Monitoring is configured gke-2 Basic Authentication is disabled gke-3 Ensure GKE Nodes are not public gke-4 Ensure the GKE Control Plane is not public gke-5 Ensure the Network Policy managed addon is enabled gke-6 Ensure OAuth Access Scopes and dedicated Service Accounts for node pools gke-7 Ensure GKE Node Pools should use the COS or COS_CONTAINERD Operating System gke-8 GKE Workload Identity should be enabled on all node pools gke-9 GKE Shielded Nodes should be enabled on all NodePools gke-10 Ensure instances have labels gke-11 Ensure instances have tags GCP-Sops \u00b6 \u276f make -f hack/gcp.mk inspec-test SERVICE = iac/gcp/sops ENV = prod Code Description sops-1 Ensure service account and IAM binding exists sops-2 Ensure that Kms key exist GCP-Observability \u00b6 \u276f make -f hack/gcp.mk inspec-test SERVICE = iac/gcp/observability ENV = prod Code Description grafana-1 Ensure service account and IAM binding exists prometheus-1 Ensure service account and IAM binding exists thanos-1 Ensure service account and IAM binding exists thanos-2 Ensure that bucket exists and labels correcly set thanos-3 Ensure that Kms key exist loki-1 Ensure service account and IAM binding exists loki-2 Ensure that bucket exists and labels correcly set loki-3 Ensure that Kms key exist tempo-1 Ensure service account and IAM binding exists tempo-2 Ensure that bucket exists and labels correcly set tempo-3 Ensure that Kms key exist GCP-Velero \u00b6 \u276f make -f hack/gcp.mk inspec-test SERVICE = iac/gcp/velero ENV = prod Code Description velero-1 Ensure service account and IAM binding exists velero-2 Ensure that bucket exists and labels correcly set velero-3 Ensure that Kms key exist GCP-Vector \u00b6 \u276f make -f hack/gcp.mk inspec-test SERVICE = iac/gcp/vector ENV = prod Code Description vector-1 Ensure service account and IAM binding exists vector-2 Ensure that bucket exists and labels correcly set vector-3 Ensure that Kms key exist GCP-External-DNS \u00b6 \u276f make -f hack/gcp.mk inspec-test SERVICE = iac/gcp/external-dns ENV = prod Code Description external_dns-1 Ensure service account and IAM binding exists Github Actions \u00b6 Create \u00b6 Destroy \u00b6 Test \u00b6 Access \u00b6 Configure kubectl \u276f make kubernetes-credentials CLOUD = gcp ENV = prod \u276f kubectl get nodes NAME STATUS ROLES AGE VERSION gke-xxxxxxxxxx-cluster-g-core-5d5d62be-tf15 Ready <none> 7h37m v1.18.10-gke.601","title":"Google Cloud Platform"},{"location":"infrastructure/gcp/#google-cloud-platform","text":"Info Work In Progress","title":"Google Cloud Platform"},{"location":"infrastructure/gcp/#setup","text":"Authenticate on the Google Cloud Platform: \u276f gcloud auth application-default login Enable APIs: \u276f make -f hack/gcp.mk gcp-enable-apis ENV = prod Create a bucket for the Terraform tfstates: \u276f make -f hack/gcp.mk gcp-bucket ENV = prod Configure Portefaix environment file ${HOME}/.config/portefaix/portefaix.sh : # GCP export TF_VAR_master_authorized_networks = '[{\"cidr_block\": \"x.x.x.x/32\", \"display_name\": \"Home\"}]' And load environment : \u276f . ./portefaix.sh gcp","title":"Setup"},{"location":"infrastructure/gcp/#terraform","text":"Infrastructure As Code for Portefaix on Google Cloud Platform is in iac/gcp directory Prerequisites A project created on Google Cloud Platform. Edit iac/gcp/gcp.prod.mk or add another file named : iac/gcp/gcp.<ENVIRONMENT>.mk Applications Versions Description Terraform v0.13.5 Usage of tfenv is recommanded GKE v1.18.X Rapid Channel","title":"Terraform"},{"location":"infrastructure/gcp/#vpc","text":"\u276f make terraform-apply SERVICE = iac/gcp/vpc ENV = prod","title":"VPC"},{"location":"infrastructure/gcp/#cloud-dns","text":"\u276f make terraform-apply SERVICE = iac/gcp/dns ENV = prod","title":"Cloud DNS"},{"location":"infrastructure/gcp/#cloud-nat","text":"\u276f make terraform-apply SERVICE = iac/gcp/external-ips/cloud-nat ENV = prod \u276f make terraform-apply SERVICE = iac/gcp/cloud-nat ENV = prod","title":"Cloud NAT"},{"location":"infrastructure/gcp/#gke","text":"\u276f make terraform-apply SERVICE = iac/gcp/gke ENV = prod","title":"GKE"},{"location":"infrastructure/gcp/#kubernetes-components","text":"","title":"Kubernetes components"},{"location":"infrastructure/gcp/#sops","text":"\u276f make terraform-apply SERVICE = iac/gcp/sops ENV = prod Outputs: email = xxxxxxxxxxxx-sops@xxxxxxxxxxxx.iam.gserviceaccount.com key = projects/xxxxxxxxxxxx/locations/europe-west1/keyRings/xxxxxxxxxxxx-sops/cryptoKeys/xxxxxxxxxxxx-sops","title":"Sops"},{"location":"infrastructure/gcp/#observability","text":"\u276f make terraform-apply SERVICE = iac/gcp/observability ENV = prod Outputs: loki_service_account = xxxxxxxxxx-loki@xxxxxxxxxx.iam.gserviceaccount.com prometheus_service_account = xxxxxxxxxx-loki@xxxxxxxxxx.iam.gserviceaccount.com tempo_service_account = xxxxxxxxxx-tempo@xxxxxxxxxx.iam.gserviceaccount.com thanos_service_account = xxxxxxxxxx-thanos@xxxxxxxxxx.iam.gserviceaccount.com","title":"Observability"},{"location":"infrastructure/gcp/#cert-manager","text":"\u276f make terraform-apply SERVICE = iac/gcp/cert-manager ENV = prod Outputs: cert_manager_service_account = xxxxxxxxxxx-cert-manager@xxxxxxxxxxx.iam.gserviceaccount.com","title":"Cert Manager"},{"location":"infrastructure/gcp/#external-dns","text":"\u276f make terraform-apply SERVICE = iac/gcp/external-dns ENV = prod Outputs: external_dns_service_account = xxxxxxxxxxx-external-dns@xxxxxxxxxxx.iam.gserviceaccount.com","title":"External DNS"},{"location":"infrastructure/gcp/#velero","text":"\u276f make terraform-apply SERVICE = iac/gcp/velero ENV = prod Outputs: velero_service_account = xxxxxxxxxxx-velero@xxxxxxxxxxx.iam.gserviceaccount.com","title":"Velero"},{"location":"infrastructure/gcp/#vector","text":"\u276f make terraform-apply SERVICE = iac/gcp/vector ENV = prod Outputs: vector_service_account = xxxxxxxxxxx-vector@xxxxxxxxxxx.iam.gserviceaccount.com","title":"Vector"},{"location":"infrastructure/gcp/#inspec","text":"inspec is used to check infrastructure : Check: \u276f make -f hack/gcp.mk inspec-debug Test infrastructure \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Platform Details \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Name: gcp Families: cloud, api Release: google-api-client-v0.34.1 Execute tests: \u276f make -f hack/gcp.mk inspec-test SERVICE = iac/gcp/<SERVICE> ENV = prod You could upload JSON results file to Heimdall Lite to display ressults","title":"Inspec"},{"location":"infrastructure/gcp/#cis-kubernetes-benchmark","text":"\u276f make -f hack/gcp.mk inspec-gcp-kubernetes ENV = prod","title":"CIS Kubernetes Benchmark"},{"location":"infrastructure/gcp/#gcp-cis","text":"You could perform tests accoring the GCP CIS : \u276f make -f hack/gcp.mk inspec-cis ENV = prod","title":"GCP CIS"},{"location":"infrastructure/gcp/#gcp-vpc","text":"\u276f make -f hack/gcp.mk inspec-test SERVICE = iac/gcp/vpc ENV = prod Code Description vpc-1 Ensure default network is deleted vpc-2 Ensure network is correctly configure","title":"GCP-VPC"},{"location":"infrastructure/gcp/#gcp-gke","text":"\u276f make -f gcp.mk inspec-test SERVICE = iac/gcp/gke ENV = prod Code Description gke-1 Stackdriver Logging and Monitoring is configured gke-2 Basic Authentication is disabled gke-3 Ensure GKE Nodes are not public gke-4 Ensure the GKE Control Plane is not public gke-5 Ensure the Network Policy managed addon is enabled gke-6 Ensure OAuth Access Scopes and dedicated Service Accounts for node pools gke-7 Ensure GKE Node Pools should use the COS or COS_CONTAINERD Operating System gke-8 GKE Workload Identity should be enabled on all node pools gke-9 GKE Shielded Nodes should be enabled on all NodePools gke-10 Ensure instances have labels gke-11 Ensure instances have tags","title":"GCP-GKE"},{"location":"infrastructure/gcp/#gcp-sops","text":"\u276f make -f hack/gcp.mk inspec-test SERVICE = iac/gcp/sops ENV = prod Code Description sops-1 Ensure service account and IAM binding exists sops-2 Ensure that Kms key exist","title":"GCP-Sops"},{"location":"infrastructure/gcp/#gcp-observability","text":"\u276f make -f hack/gcp.mk inspec-test SERVICE = iac/gcp/observability ENV = prod Code Description grafana-1 Ensure service account and IAM binding exists prometheus-1 Ensure service account and IAM binding exists thanos-1 Ensure service account and IAM binding exists thanos-2 Ensure that bucket exists and labels correcly set thanos-3 Ensure that Kms key exist loki-1 Ensure service account and IAM binding exists loki-2 Ensure that bucket exists and labels correcly set loki-3 Ensure that Kms key exist tempo-1 Ensure service account and IAM binding exists tempo-2 Ensure that bucket exists and labels correcly set tempo-3 Ensure that Kms key exist","title":"GCP-Observability"},{"location":"infrastructure/gcp/#gcp-velero","text":"\u276f make -f hack/gcp.mk inspec-test SERVICE = iac/gcp/velero ENV = prod Code Description velero-1 Ensure service account and IAM binding exists velero-2 Ensure that bucket exists and labels correcly set velero-3 Ensure that Kms key exist","title":"GCP-Velero"},{"location":"infrastructure/gcp/#gcp-vector","text":"\u276f make -f hack/gcp.mk inspec-test SERVICE = iac/gcp/vector ENV = prod Code Description vector-1 Ensure service account and IAM binding exists vector-2 Ensure that bucket exists and labels correcly set vector-3 Ensure that Kms key exist","title":"GCP-Vector"},{"location":"infrastructure/gcp/#gcp-external-dns","text":"\u276f make -f hack/gcp.mk inspec-test SERVICE = iac/gcp/external-dns ENV = prod Code Description external_dns-1 Ensure service account and IAM binding exists","title":"GCP-External-DNS"},{"location":"infrastructure/gcp/#github-actions","text":"","title":"Github Actions"},{"location":"infrastructure/gcp/#create","text":"","title":"Create"},{"location":"infrastructure/gcp/#destroy","text":"","title":"Destroy"},{"location":"infrastructure/gcp/#test","text":"","title":"Test"},{"location":"infrastructure/gcp/#access","text":"Configure kubectl \u276f make kubernetes-credentials CLOUD = gcp ENV = prod \u276f kubectl get nodes NAME STATUS ROLES AGE VERSION gke-xxxxxxxxxx-cluster-g-core-5d5d62be-tf15 Ready <none> 7h37m v1.18.10-gke.601","title":"Access"},{"location":"infrastructure/local/","text":"Development \u00b6 For development kind is used. Cluster \u00b6 Create cluster : \u276f make kind-create ENV = dev Check core components: \u276f kubectl get nodes NAME STATUS ROLES AGE VERSION portefaix-local-kind-control-plane Ready master 95s v1.19.1 portefaix-local-kind-worker Ready <none> 61s v1.19.1 \u276f kubectl get pods -A NAMESPACE NAME READY STATUS RESTARTS AGE kube-system coredns-f9fd979d6-54qt2 1 /1 Running 0 90s kube-system coredns-f9fd979d6-h2vsq 1 /1 Running 0 90s kube-system etcd-portefaix-local-kind-control-plane 1 /1 Running 0 95s kube-system kindnet-9kbsd 1 /1 Running 0 90s kube-system kindnet-hrfnp 1 /1 Running 0 75s kube-system kube-apiserver-portefaix-local-kind-control-plane 1 /1 Running 0 95s kube-system kube-controller-manager-portefaix-local-kind-control-plane 1 /1 Running 0 95s kube-system kube-proxy-hs6jb 1 /1 Running 0 90s kube-system kube-proxy-rrghq 1 /1 Running 0 75s kube-system kube-scheduler-portefaix-local-kind-control-plane 1 /1 Running 0 95s local-path-storage local-path-provisioner-78776bfc44-q87nb 1 /1 Running 0 90s Delete cluster : \u276f make kind-delete ENV = dev","title":"Local"},{"location":"infrastructure/local/#development","text":"For development kind is used.","title":"Development"},{"location":"infrastructure/local/#cluster","text":"Create cluster : \u276f make kind-create ENV = dev Check core components: \u276f kubectl get nodes NAME STATUS ROLES AGE VERSION portefaix-local-kind-control-plane Ready master 95s v1.19.1 portefaix-local-kind-worker Ready <none> 61s v1.19.1 \u276f kubectl get pods -A NAMESPACE NAME READY STATUS RESTARTS AGE kube-system coredns-f9fd979d6-54qt2 1 /1 Running 0 90s kube-system coredns-f9fd979d6-h2vsq 1 /1 Running 0 90s kube-system etcd-portefaix-local-kind-control-plane 1 /1 Running 0 95s kube-system kindnet-9kbsd 1 /1 Running 0 90s kube-system kindnet-hrfnp 1 /1 Running 0 75s kube-system kube-apiserver-portefaix-local-kind-control-plane 1 /1 Running 0 95s kube-system kube-controller-manager-portefaix-local-kind-control-plane 1 /1 Running 0 95s kube-system kube-proxy-hs6jb 1 /1 Running 0 90s kube-system kube-proxy-rrghq 1 /1 Running 0 75s kube-system kube-scheduler-portefaix-local-kind-control-plane 1 /1 Running 0 95s local-path-storage local-path-provisioner-78776bfc44-q87nb 1 /1 Running 0 90s Delete cluster : \u276f make kind-delete ENV = dev","title":"Cluster"},{"location":"infrastructure/quick-start/","text":"Quick Start \u00b6 Credentials \u00b6 Export your GitHub personal access token and username: \u276f cat ~/.config/portefaix/lab.sh #!/usr/bin/env bash export GITHUB_USER = <your-username> export GITHUB_TOKEN = <your-token> Load credentials : \u276f . ./portefaix.sh","title":"Quick Start"},{"location":"infrastructure/quick-start/#quick-start","text":"","title":"Quick Start"},{"location":"infrastructure/quick-start/#credentials","text":"Export your GitHub personal access token and username: \u276f cat ~/.config/portefaix/lab.sh #!/usr/bin/env bash export GITHUB_USER = <your-username> export GITHUB_TOKEN = <your-token> Load credentials : \u276f . ./portefaix.sh","title":"Credentials"},{"location":"infrastructure/scaleway/","text":"Scaleway \u00b6 Info Work In Progress Setup \u00b6 Configure Portefaix environment file ${HOME}/.config/portefaix/portefaix.sh : function setup_scaleway () { export SCW_ACCESS_KEY = \"xxxxxxxxxx\" export SCW_SECRET_KEY = \"xxxxxxxxx\" export SCW_DEFAULT_PROJECT_ID = \"xxxxxxxxx\" export SCW_DEFAULT_ORGANIZATION_ID = \" ${ SCW_DEFAULT_PROJECT_ID } \" export AWS_ACCESS_KEY_ID = \" ${ SCW_ACCESS_KEY } \" export AWS_SECRET_ACCESS_KEY = \" ${ SCW_SECRET_KEY } \" export AWS_DEFAULT_REGION = \"eu-west-3\" export AWS_REGION = \"eu-west-3\" } And load environment : \u276f . ./portefaix.sh Terraform \u00b6 Infrastructure As Code for Portefaix using Azure is in iac/scaleway directory Prerequisites A project created on Azure Edit iac/scaleway/scaleway.staging.mk or add another file named : iac/scaleway/scaleway.<ENVIRONMENT>.mk Kapsule \u00b6 \u276f make terraform-apply SERVICE = iac/scaleway/kapsule ENV = sandbox Inspec \u00b6 Access \u00b6 Configure kubectl \u276f make -f scw.mk scw-kube-credentials ENV = staging \u276f kubectl get nodes NAME STATUS ROLES AGE VERSION scw-portefaix-staging-kapsule-core-740bfe09e85 Ready <none> 11h v1.18.12 scw-portefaix-staging-kapsule-ops-30b80b2cad4a Ready <none> 11h v1.18.12","title":"Scaleway"},{"location":"infrastructure/scaleway/#scaleway","text":"Info Work In Progress","title":"Scaleway"},{"location":"infrastructure/scaleway/#setup","text":"Configure Portefaix environment file ${HOME}/.config/portefaix/portefaix.sh : function setup_scaleway () { export SCW_ACCESS_KEY = \"xxxxxxxxxx\" export SCW_SECRET_KEY = \"xxxxxxxxx\" export SCW_DEFAULT_PROJECT_ID = \"xxxxxxxxx\" export SCW_DEFAULT_ORGANIZATION_ID = \" ${ SCW_DEFAULT_PROJECT_ID } \" export AWS_ACCESS_KEY_ID = \" ${ SCW_ACCESS_KEY } \" export AWS_SECRET_ACCESS_KEY = \" ${ SCW_SECRET_KEY } \" export AWS_DEFAULT_REGION = \"eu-west-3\" export AWS_REGION = \"eu-west-3\" } And load environment : \u276f . ./portefaix.sh","title":"Setup"},{"location":"infrastructure/scaleway/#terraform","text":"Infrastructure As Code for Portefaix using Azure is in iac/scaleway directory Prerequisites A project created on Azure Edit iac/scaleway/scaleway.staging.mk or add another file named : iac/scaleway/scaleway.<ENVIRONMENT>.mk","title":"Terraform"},{"location":"infrastructure/scaleway/#kapsule","text":"\u276f make terraform-apply SERVICE = iac/scaleway/kapsule ENV = sandbox","title":"Kapsule"},{"location":"infrastructure/scaleway/#inspec","text":"","title":"Inspec"},{"location":"infrastructure/scaleway/#access","text":"Configure kubectl \u276f make -f scw.mk scw-kube-credentials ENV = staging \u276f kubectl get nodes NAME STATUS ROLES AGE VERSION scw-portefaix-staging-kapsule-core-740bfe09e85 Ready <none> 11h v1.18.12 scw-portefaix-staging-kapsule-ops-30b80b2cad4a Ready <none> 11h v1.18.12","title":"Access"},{"location":"reference/glossary/","text":"Glossary \u00b6 [GKE]: Google Kubernetes Engine [EKS]: Elastic Kubernetes Service [AKS]: Azure Kubernetes Service","title":"Glossary"},{"location":"reference/glossary/#glossary","text":"[GKE]: Google Kubernetes Engine [EKS]: Elastic Kubernetes Service [AKS]: Azure Kubernetes Service","title":"Glossary"},{"location":"reference/reference/","text":"Reference \u00b6","title":"Reference"},{"location":"reference/reference/#reference","text":"","title":"Reference"},{"location":"stacks/cert-manager/cert-manager/","text":"Cert-Manager \u00b6 Automatically provision and manage TLS certificates in Kubernetes Chart : cert-manager Version: 1.0.4 Components \u00b6","title":"Cert-Manager"},{"location":"stacks/cert-manager/cert-manager/#cert-manager","text":"Automatically provision and manage TLS certificates in Kubernetes Chart : cert-manager Version: 1.0.4","title":"Cert-Manager"},{"location":"stacks/cert-manager/cert-manager/#components","text":"","title":"Components"},{"location":"stacks/cert-manager/letsencrypt/","text":"Let's Encrypt \u00b6 Create a cluster issuer to use Let's Encrypt","title":"Letsencrypt"},{"location":"stacks/cert-manager/letsencrypt/#lets-encrypt","text":"Create a cluster issuer to use Let's Encrypt","title":"Let's Encrypt"},{"location":"stacks/flux-system/monitoring/","text":"Flux Monitoring \u00b6 Description \u00b6 Checks \u00b6 Pod Monitors: \u276f kubectl get podmonitors.monitoring.coreos.com -n flux-system NAME AGE helm-controller 20m kustomize-controller 20m notification-controller 20m source-controller 20m","title":"Monitoring"},{"location":"stacks/flux-system/monitoring/#flux-monitoring","text":"","title":"Flux Monitoring"},{"location":"stacks/flux-system/monitoring/#description","text":"","title":"Description"},{"location":"stacks/flux-system/monitoring/#checks","text":"Pod Monitors: \u276f kubectl get podmonitors.monitoring.coreos.com -n flux-system NAME AGE helm-controller 20m kustomize-controller 20m notification-controller 20m source-controller 20m","title":"Checks"},{"location":"stacks/flux-system/system/","text":"Flux System \u00b6 Google Cloud Platform Amazon AWS Microsoft Azure Description \u00b6 Checks \u00b6","title":"System"},{"location":"stacks/flux-system/system/#flux-system","text":"Google Cloud Platform Amazon AWS Microsoft Azure","title":"Flux System"},{"location":"stacks/flux-system/system/#description","text":"","title":"Description"},{"location":"stacks/flux-system/system/#checks","text":"","title":"Checks"},{"location":"stacks/identity/pomerium/","text":"Pomerium \u00b6 For authentication and authorization, Pomerium is used. Description \u00b6 Chart : pomerium Version: 13.2.3","title":"Pomerium"},{"location":"stacks/identity/pomerium/#pomerium","text":"For authentication and authorization, Pomerium is used.","title":"Pomerium"},{"location":"stacks/identity/pomerium/#description","text":"Chart : pomerium Version: 13.2.3","title":"Description"},{"location":"stacks/metrics-server/metrics-server/","text":"Metrics Server \u00b6 Cluster-wide aggregator of resource usage data Description \u00b6 Chart : metrics-server Version: 2.11.1","title":"Metrics Server"},{"location":"stacks/metrics-server/metrics-server/#metrics-server","text":"Cluster-wide aggregator of resource usage data","title":"Metrics Server"},{"location":"stacks/metrics-server/metrics-server/#description","text":"Chart : metrics-server Version: 2.11.1","title":"Description"},{"location":"stacks/monitoring/alertmanager/","text":"Alertmanager \u00b6 Google Cloud Platform Amazon AWS Microsoft Azure Description \u00b6 Chart : kube-prometheus-stack Version: 11.0.4 Checks \u00b6 Deployment of Alertmanager \u276f kubectl -n monitoring get alertmanager","title":"Alertmanager"},{"location":"stacks/monitoring/alertmanager/#alertmanager","text":"Google Cloud Platform Amazon AWS Microsoft Azure","title":"Alertmanager"},{"location":"stacks/monitoring/alertmanager/#description","text":"Chart : kube-prometheus-stack Version: 11.0.4","title":"Description"},{"location":"stacks/monitoring/alertmanager/#checks","text":"Deployment of Alertmanager \u276f kubectl -n monitoring get alertmanager","title":"Checks"},{"location":"stacks/monitoring/grafana/","text":"Grafana \u00b6 Google Cloud Platform Amazon AWS Microsoft Azure Description \u00b6 Chart : kube-prometheus-stack Version: 11.0.4 Checks \u00b6 Deployment of Grafana","title":"Grafana"},{"location":"stacks/monitoring/grafana/#grafana","text":"Google Cloud Platform Amazon AWS Microsoft Azure","title":"Grafana"},{"location":"stacks/monitoring/grafana/#description","text":"Chart : kube-prometheus-stack Version: 11.0.4","title":"Description"},{"location":"stacks/monitoring/grafana/#checks","text":"Deployment of Grafana","title":"Checks"},{"location":"stacks/monitoring/kube-state-metrics/","text":"KubeStateMetrics \u00b6 Description \u00b6 Chart : kube-prometheus-stack Version: 11.0.4 Checks \u00b6 Deployment of KubeStateMetrics","title":"Kube State Metrics"},{"location":"stacks/monitoring/kube-state-metrics/#kubestatemetrics","text":"","title":"KubeStateMetrics"},{"location":"stacks/monitoring/kube-state-metrics/#description","text":"Chart : kube-prometheus-stack Version: 11.0.4","title":"Description"},{"location":"stacks/monitoring/kube-state-metrics/#checks","text":"Deployment of KubeStateMetrics","title":"Checks"},{"location":"stacks/monitoring/node-exporter/","text":"NodeExporter \u00b6 Google Cloud Platform Amazon AWS Microsoft Azure Description \u00b6 Chart : kube-prometheus-stack Version: 11.0.4 Checks \u00b6 Deployment of NodeExporter","title":"Node Exporter"},{"location":"stacks/monitoring/node-exporter/#nodeexporter","text":"Google Cloud Platform Amazon AWS Microsoft Azure","title":"NodeExporter"},{"location":"stacks/monitoring/node-exporter/#description","text":"Chart : kube-prometheus-stack Version: 11.0.4","title":"Description"},{"location":"stacks/monitoring/node-exporter/#checks","text":"Deployment of NodeExporter","title":"Checks"},{"location":"stacks/monitoring/prometheus-operator/","text":"Prometheus Operator \u00b6 Description \u00b6 Chart : kube-prometheus-stack Version: 11.0.4 Checks \u00b6 CRD: \u276f kubectl get crd | grep coreos alertmanagerconfigs.monitoring.coreos.com 2020 -11-08T17:11:39Z alertmanagers.monitoring.coreos.com 2020 -11-08T17:11:40Z podmonitors.monitoring.coreos.com 2020 -11-08T17:11:40Z probes.monitoring.coreos.com 2020 -11-08T17:11:40Z prometheuses.monitoring.coreos.com 2020 -11-08T17:11:41Z prometheusrules.monitoring.coreos.com 2020 -11-08T17:11:41Z servicemonitors.monitoring.coreos.com 2020 -11-08T17:11:42Z thanosrulers.monitoring.coreos.com 2020 -11-08T17:11:42Z Deployment of the Prometheus Operator \u276f kubectl get deployments.apps -n monitoring -l app = kube-prometheus-stack-operator NAME READY UP-TO-DATE AVAILABLE AGE kube-prometheus-stack-operator 1 /1 1 1 26m \u276f kubectl get svc -n monitoring -l app = kube-prometheus-stack-operator NAME TYPE CLUSTER-IP EXTERNAL-IP PORT ( S ) AGE kube-prometheus-stack-operator ClusterIP 10 .40.16.153 <none> 443 /TCP 27m","title":"Prometheus Operator"},{"location":"stacks/monitoring/prometheus-operator/#prometheus-operator","text":"","title":"Prometheus Operator"},{"location":"stacks/monitoring/prometheus-operator/#description","text":"Chart : kube-prometheus-stack Version: 11.0.4","title":"Description"},{"location":"stacks/monitoring/prometheus-operator/#checks","text":"CRD: \u276f kubectl get crd | grep coreos alertmanagerconfigs.monitoring.coreos.com 2020 -11-08T17:11:39Z alertmanagers.monitoring.coreos.com 2020 -11-08T17:11:40Z podmonitors.monitoring.coreos.com 2020 -11-08T17:11:40Z probes.monitoring.coreos.com 2020 -11-08T17:11:40Z prometheuses.monitoring.coreos.com 2020 -11-08T17:11:41Z prometheusrules.monitoring.coreos.com 2020 -11-08T17:11:41Z servicemonitors.monitoring.coreos.com 2020 -11-08T17:11:42Z thanosrulers.monitoring.coreos.com 2020 -11-08T17:11:42Z Deployment of the Prometheus Operator \u276f kubectl get deployments.apps -n monitoring -l app = kube-prometheus-stack-operator NAME READY UP-TO-DATE AVAILABLE AGE kube-prometheus-stack-operator 1 /1 1 1 26m \u276f kubectl get svc -n monitoring -l app = kube-prometheus-stack-operator NAME TYPE CLUSTER-IP EXTERNAL-IP PORT ( S ) AGE kube-prometheus-stack-operator ClusterIP 10 .40.16.153 <none> 443 /TCP 27m","title":"Checks"},{"location":"stacks/monitoring/prometheus/","text":"Prometheus \u00b6 Google Cloud Platform Amazon AWS Microsoft Azure Description \u00b6 Chart : kube-prometheus-stack Version: 11.0.4 Checks \u00b6 Deployment of Prometheus \u276f kubectl -n monitoring get prometheus NAME VERSION REPLICAS AGE kube-prometheus-stack-prometheus v2.22.1 1 41m \u276f kubectl get statefulsets.apps -n monitoring -l app = kube-prometheus-stack-prometheus NAME READY AGE prometheus-kube-prometheus-stack-prometheus 1 /1 30m \u276f kubectl get svc -n monitoring -l app = kube-prometheus-stack-prometheus NAME TYPE CLUSTER-IP EXTERNAL-IP PORT ( S ) AGE kube-prometheus-stack-prometheus ClusterIP 10 .40.25.145 <none> 9090 /TCP 29m \u276f kubectl get svc -n monitoring prometheus-operated NAME TYPE CLUSTER-IP EXTERNAL-IP PORT ( S ) AGE prometheus-operated ClusterIP None <none> 9090 /TCP,10901/TCP 29m","title":"Prometheus"},{"location":"stacks/monitoring/prometheus/#prometheus","text":"Google Cloud Platform Amazon AWS Microsoft Azure","title":"Prometheus"},{"location":"stacks/monitoring/prometheus/#description","text":"Chart : kube-prometheus-stack Version: 11.0.4","title":"Description"},{"location":"stacks/monitoring/prometheus/#checks","text":"Deployment of Prometheus \u276f kubectl -n monitoring get prometheus NAME VERSION REPLICAS AGE kube-prometheus-stack-prometheus v2.22.1 1 41m \u276f kubectl get statefulsets.apps -n monitoring -l app = kube-prometheus-stack-prometheus NAME READY AGE prometheus-kube-prometheus-stack-prometheus 1 /1 30m \u276f kubectl get svc -n monitoring -l app = kube-prometheus-stack-prometheus NAME TYPE CLUSTER-IP EXTERNAL-IP PORT ( S ) AGE kube-prometheus-stack-prometheus ClusterIP 10 .40.25.145 <none> 9090 /TCP 29m \u276f kubectl get svc -n monitoring prometheus-operated NAME TYPE CLUSTER-IP EXTERNAL-IP PORT ( S ) AGE prometheus-operated ClusterIP None <none> 9090 /TCP,10901/TCP 29m","title":"Checks"},{"location":"stacks/monitoring/thanos/","text":"Thanos \u00b6 Google Cloud Platform Amazon AWS Microsoft Azure Description \u00b6 WIP : See #46 Chart : thanos Version: 0.3.29 Checks \u00b6 Deployment of Thanos","title":"Thanos"},{"location":"stacks/monitoring/thanos/#thanos","text":"Google Cloud Platform Amazon AWS Microsoft Azure","title":"Thanos"},{"location":"stacks/monitoring/thanos/#description","text":"WIP : See #46 Chart : thanos Version: 0.3.29","title":"Description"},{"location":"stacks/monitoring/thanos/#checks","text":"Deployment of Thanos","title":"Checks"},{"location":"stacks/sealed-secrets/sealed-secrets/","text":"Sealed Secrets \u00b6 Description \u00b6 Chart : sealed-secrets Version: 1.10.0","title":"Sealed Secrets"},{"location":"stacks/sealed-secrets/sealed-secrets/#sealed-secrets","text":"","title":"Sealed Secrets"},{"location":"stacks/sealed-secrets/sealed-secrets/#description","text":"Chart : sealed-secrets Version: 1.10.0","title":"Description"},{"location":"stacks/storage/velero/","text":"Velero \u00b6 For disaster recovery, Velero is used. Google Cloud Platform Amazon AWS Microsoft Azure Description \u00b6 Chart : velero Version: 2.13.7","title":"Velero"},{"location":"stacks/storage/velero/#velero","text":"For disaster recovery, Velero is used. Google Cloud Platform Amazon AWS Microsoft Azure","title":"Velero"},{"location":"stacks/storage/velero/#description","text":"Chart : velero Version: 2.13.7","title":"Description"},{"location":"user/gitops/","text":"Gitops \u00b6 Gitops model used is Flux v2 Organization \u00b6 Manifests files : kubernetes/base directory contains manifests for all components kubernetes/overlays/** directory contains Kustomize overlays Flux components are deployed for each clusster on clusters/<CLOUD>/<ENV>/ : clusters/<CLOUD>/<ENV>/flux-system : Flux core components clusters/<CLOUD>/<ENV>/*.yaml : Flux Kustomization files for components Sync \u00b6 \u276f make gitops-bootstrap ENV = <ENV> CLOUD = <CLOUD PROVIDER>","title":"Gitops"},{"location":"user/gitops/#gitops","text":"Gitops model used is Flux v2","title":"Gitops"},{"location":"user/gitops/#organization","text":"Manifests files : kubernetes/base directory contains manifests for all components kubernetes/overlays/** directory contains Kustomize overlays Flux components are deployed for each clusster on clusters/<CLOUD>/<ENV>/ : clusters/<CLOUD>/<ENV>/flux-system : Flux core components clusters/<CLOUD>/<ENV>/*.yaml : Flux Kustomization files for components","title":"Organization"},{"location":"user/gitops/#sync","text":"\u276f make gitops-bootstrap ENV = <ENV> CLOUD = <CLOUD PROVIDER>","title":"Sync"},{"location":"user/new/","text":"Setup a new Cluster \u00b6 Example : on local environment, we target a new cluster test . Authentication \u276f make kube-credentials CLOUD = gcp ENV = prod Initialize \u276f make gitops-bootstrap ENV = prod CLOUD = gcp BRANCH = master Checks \u276f flux get sources git NAME REVISION READY MESSAGE flux-system master/a4421d561af222a19364679705340b9d083d4ec5 True Fetched revision: master/a4421d561af222a19364679705340b9d083d4ec5 Create a Flux Kustomization file into clusters/kind/test for Charts component like clusters/kind/local/charts.yaml Commit and Push Create a Flux Kustomization for Sealed Secrets, commit and push Create overlays for these components into kubernetes/overlays/test Checks : \u276f flux get sources helm NAME REVISION READY MESSAGE banzaicloud-charts 2020 -10-30T13:43:37Z True Fetched revision: 2020 -10-30T13:43:37Z flagger-charts 2020 -09-29T06:49:17.983264392Z True Fetched revision: 2020 -09-29T06:49:17.983264392Z grafana-loki-charts 2020 -10-28T19:01:32.896983804Z True Fetched revision: 2020 -10-28T19:01:32.896983804Z jetstack 2020 -10-29T16:02:08Z True Fetched revision: 2020 -10-29T16:02:08Z k8s-at-home-charts 2019 -12-22T07:05:20.914237208Z True Fetched revision: 2019 -12-22T07:05:20.914237208Z kubernetes-incubator-charts 2020 -10-30T16:13:47.08513541Z True Fetched revision: 2020 -10-30T16:13:47.08513541Z kubernetes-stable-charts 2020 -10-30T15:57:54.773332885Z True Fetched revision: 2020 -10-30T15:57:54.773332885Z openfaas-charts 2020 -09-21T10:54:01.274831+01:00 True Fetched revision: 2020 -09-21T10:54:01.274831+01:00 podinfo 2020 -10-28T10:09:58.648748663Z True Fetched revision: 2020 -10-28T10:09:58.648748663Z prometheus-community-charts 2020 -09-27T05:31:40.762116-04:00 True Fetched revision: 2020 -09-27T05:31:40.762116-04:00 \u276f flux get kustomizations NAME REVISION SUSPENDED READY MESSAGE flux-system feature/components-kind/6d38170f73b9eb9195c24ba9b2424f43e3101ed2 False True Applied revision: feature/components-kind/6d38170f73b9eb9195c24ba9b2424f43e3101ed2 flux-system-charts feature/components-kind/6d38170f73b9eb9195c24ba9b2424f43e3101ed2 False True Applied revision: feature/components-kind/6d38170f73b9eb9195c24ba9b2424f43e3101ed2 flux-system-notifications feature/components-kind/6d38170f73b9eb9195c24ba9b2424f43e3101ed2 False True Applied revision: feature/components-kind/6d38170f73b9eb9195c24ba9b2424f43e3101ed2 sealed-secrets feature/components-kind/6d38170f73b9eb9195c24ba9b2424f43e3101ed2 False True Applied revision: feature/components-kind/6d38170f73b9eb9195c24ba9b2424f43e3101ed2 \u276f flux get helmreleases NAME REVISION SUSPENDED READY MESSAGE sealed-secrets 1 .12.0 False True release reconciliation succeeded Notifications \u00b6 Slack \u00b6 Using your Slack webhook URL, create a Kubernetes secret YAML file : \u276f kubectl create secret generic slack-webhook-url --namespace = flux-system \\ --from-literal = address = https://hooks.slack.com/services/XXXXXXXX/XXXXX --dry-run = client -o yaml > slack-webhook-url.yaml Set the Kubeseal secret : \u276f make kubernetes-secret CERT = config/pub-sealed-secrets.pem FILE = slack-webhook-url.yaml \u276f mv slack-webhook-url-sealed.yaml kubernetes/flux-system/notifications/ \u276f rm slack-webhook-url.yaml \u276f flux get alert-providers NAME READY MESSAGE slack-portefaix True Initialized \u276f flux get alerts NAME SUSPENDED READY MESSAGE slack-portefaix-lab False True Initialized","title":"New Cluster"},{"location":"user/new/#setup-a-new-cluster","text":"Example : on local environment, we target a new cluster test . Authentication \u276f make kube-credentials CLOUD = gcp ENV = prod Initialize \u276f make gitops-bootstrap ENV = prod CLOUD = gcp BRANCH = master Checks \u276f flux get sources git NAME REVISION READY MESSAGE flux-system master/a4421d561af222a19364679705340b9d083d4ec5 True Fetched revision: master/a4421d561af222a19364679705340b9d083d4ec5 Create a Flux Kustomization file into clusters/kind/test for Charts component like clusters/kind/local/charts.yaml Commit and Push Create a Flux Kustomization for Sealed Secrets, commit and push Create overlays for these components into kubernetes/overlays/test Checks : \u276f flux get sources helm NAME REVISION READY MESSAGE banzaicloud-charts 2020 -10-30T13:43:37Z True Fetched revision: 2020 -10-30T13:43:37Z flagger-charts 2020 -09-29T06:49:17.983264392Z True Fetched revision: 2020 -09-29T06:49:17.983264392Z grafana-loki-charts 2020 -10-28T19:01:32.896983804Z True Fetched revision: 2020 -10-28T19:01:32.896983804Z jetstack 2020 -10-29T16:02:08Z True Fetched revision: 2020 -10-29T16:02:08Z k8s-at-home-charts 2019 -12-22T07:05:20.914237208Z True Fetched revision: 2019 -12-22T07:05:20.914237208Z kubernetes-incubator-charts 2020 -10-30T16:13:47.08513541Z True Fetched revision: 2020 -10-30T16:13:47.08513541Z kubernetes-stable-charts 2020 -10-30T15:57:54.773332885Z True Fetched revision: 2020 -10-30T15:57:54.773332885Z openfaas-charts 2020 -09-21T10:54:01.274831+01:00 True Fetched revision: 2020 -09-21T10:54:01.274831+01:00 podinfo 2020 -10-28T10:09:58.648748663Z True Fetched revision: 2020 -10-28T10:09:58.648748663Z prometheus-community-charts 2020 -09-27T05:31:40.762116-04:00 True Fetched revision: 2020 -09-27T05:31:40.762116-04:00 \u276f flux get kustomizations NAME REVISION SUSPENDED READY MESSAGE flux-system feature/components-kind/6d38170f73b9eb9195c24ba9b2424f43e3101ed2 False True Applied revision: feature/components-kind/6d38170f73b9eb9195c24ba9b2424f43e3101ed2 flux-system-charts feature/components-kind/6d38170f73b9eb9195c24ba9b2424f43e3101ed2 False True Applied revision: feature/components-kind/6d38170f73b9eb9195c24ba9b2424f43e3101ed2 flux-system-notifications feature/components-kind/6d38170f73b9eb9195c24ba9b2424f43e3101ed2 False True Applied revision: feature/components-kind/6d38170f73b9eb9195c24ba9b2424f43e3101ed2 sealed-secrets feature/components-kind/6d38170f73b9eb9195c24ba9b2424f43e3101ed2 False True Applied revision: feature/components-kind/6d38170f73b9eb9195c24ba9b2424f43e3101ed2 \u276f flux get helmreleases NAME REVISION SUSPENDED READY MESSAGE sealed-secrets 1 .12.0 False True release reconciliation succeeded","title":"Setup a new Cluster"},{"location":"user/new/#notifications","text":"","title":"Notifications"},{"location":"user/new/#slack","text":"Using your Slack webhook URL, create a Kubernetes secret YAML file : \u276f kubectl create secret generic slack-webhook-url --namespace = flux-system \\ --from-literal = address = https://hooks.slack.com/services/XXXXXXXX/XXXXX --dry-run = client -o yaml > slack-webhook-url.yaml Set the Kubeseal secret : \u276f make kubernetes-secret CERT = config/pub-sealed-secrets.pem FILE = slack-webhook-url.yaml \u276f mv slack-webhook-url-sealed.yaml kubernetes/flux-system/notifications/ \u276f rm slack-webhook-url.yaml \u276f flux get alert-providers NAME READY MESSAGE slack-portefaix True Initialized \u276f flux get alerts NAME SUSPENDED READY MESSAGE slack-portefaix-lab False True Initialized","title":"Slack"},{"location":"user/secrets/","text":"Secrets \u00b6 Sops is used to manage secrets. Store \u00b6 Put your sensitive data into the directory .secrets or .secrets/<CLOUD_PROVIDER> Kubernetes secret \u00b6 Create a Kubernetes secret file from sensitive file. Ex: for Thanos configuration : \u276f cat .secrets/aws/object-store.yaml type : S3 config : bucket : xxxxxxxxxxx endpoint : s3.eu-west-3.amazonaws.com region : eu-west-3 \u276f make kubernetes-secret NAME = thanos-object-storage NAMESPACE = monitoring FILE = .secrets/aws/object-store.yaml > thanos-object-storage.yaml Encrypt \u00b6 Encrypt the file using Sops: \u276f make sops-encrypt ENV = staging CLOUD = aws FILE = thanos-object-storage.yaml You can now safely store this file into Git. \u276f mv thanos-object-storage.yaml kubernetes/overlays/staging/monitoring/thanos/ Decrypt \u00b6 Check you can decrypt the file: \u276f make sops-decrypt FILE = kubernetes/overlays/staging/monitoring/thanos/thanos-object-storage.yaml apiVersion: v1 data: object-store.yaml: xxxxxxxxxxx kind: Secret metadata: creationTimestamp: null name: thanos-object-storage namespace: monitoring CICD \u00b6 Generate a GPG key with OpenPGP without specifying a passphrase: \u276f gpg --full-generate-key Real name: nlamirault Email address: nlamirault@users.noreply.github.com Comment: You selected this USER-ID: \"nlamirault <nlamirault@users.noreply.github.com>\" Change ( N ) ame, ( C ) omment, ( E ) mail or ( O ) kay/ ( Q ) uit? O Retrieve the GPG key ID: \u276f gpg --export-secret-keys \\ --armor FC5BB3323309486AC8DA477CEC6421C7C33D2301 Add this output into a Github Secret SOPS_GPG_KEY . On the e2e Github Action workflow, we create a Kubernetes secret sops-gpg which will be used by Flux.","title":"Secrets"},{"location":"user/secrets/#secrets","text":"Sops is used to manage secrets.","title":"Secrets"},{"location":"user/secrets/#store","text":"Put your sensitive data into the directory .secrets or .secrets/<CLOUD_PROVIDER>","title":"Store"},{"location":"user/secrets/#kubernetes-secret","text":"Create a Kubernetes secret file from sensitive file. Ex: for Thanos configuration : \u276f cat .secrets/aws/object-store.yaml type : S3 config : bucket : xxxxxxxxxxx endpoint : s3.eu-west-3.amazonaws.com region : eu-west-3 \u276f make kubernetes-secret NAME = thanos-object-storage NAMESPACE = monitoring FILE = .secrets/aws/object-store.yaml > thanos-object-storage.yaml","title":"Kubernetes secret"},{"location":"user/secrets/#encrypt","text":"Encrypt the file using Sops: \u276f make sops-encrypt ENV = staging CLOUD = aws FILE = thanos-object-storage.yaml You can now safely store this file into Git. \u276f mv thanos-object-storage.yaml kubernetes/overlays/staging/monitoring/thanos/","title":"Encrypt"},{"location":"user/secrets/#decrypt","text":"Check you can decrypt the file: \u276f make sops-decrypt FILE = kubernetes/overlays/staging/monitoring/thanos/thanos-object-storage.yaml apiVersion: v1 data: object-store.yaml: xxxxxxxxxxx kind: Secret metadata: creationTimestamp: null name: thanos-object-storage namespace: monitoring","title":"Decrypt"},{"location":"user/secrets/#cicd","text":"Generate a GPG key with OpenPGP without specifying a passphrase: \u276f gpg --full-generate-key Real name: nlamirault Email address: nlamirault@users.noreply.github.com Comment: You selected this USER-ID: \"nlamirault <nlamirault@users.noreply.github.com>\" Change ( N ) ame, ( C ) omment, ( E ) mail or ( O ) kay/ ( Q ) uit? O Retrieve the GPG key ID: \u276f gpg --export-secret-keys \\ --armor FC5BB3323309486AC8DA477CEC6421C7C33D2301 Add this output into a Github Secret SOPS_GPG_KEY . On the e2e Github Action workflow, we create a Kubernetes secret sops-gpg which will be used by Flux.","title":"CICD"}]}